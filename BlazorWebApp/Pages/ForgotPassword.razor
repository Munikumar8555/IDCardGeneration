@page "/forgot-password"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using BlazorWebApp.Data
@inject IdDetailsDbContext DbContext
@inject NavigationManager Navigation

<div class="custom-form-bg">
    <div class="custom-form-container">
        <h2 class="custom-form-title">Forgot Password</h2>
        <EditForm Model="forgotModel" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="custom-form-group">
                <label>Email :</label>
                <InputText class="custom-form-input" @bind-Value="forgotModel.Email" />
                <ValidationMessage For="@(() => forgotModel.Email)" />
            </div>
            <div class="custom-form-group">
                <label>New Password :</label>
                <InputText type="password" class="custom-form-input" @bind-Value="forgotModel.NewPassword" />
                <ValidationMessage For="@(() => forgotModel.NewPassword)" />
            </div>
            <div class="custom-form-group">
                <label>Confirm Password :</label>
                <InputText type="password" class="custom-form-input" @bind-Value="forgotModel.ConfirmPassword" />
                <ValidationMessage For="@(() => forgotModel.ConfirmPassword)" />
            </div>
            <button type="submit" class="custom-form-btn">Reset Password</button>
        </EditForm>
        @if (!string.IsNullOrEmpty(successMessage))
        {
            <div class="alert alert-success">@successMessage</div>
        }
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }
        <div style="text-align:right; margin-top: 0.5rem;">
            <a href="/login" class="custom-form-link">Back to Login</a>
        </div>
    </div>
</div>

@code {
    private ForgotModel forgotModel = new ForgotModel();
    private string errorMessage;
    private string successMessage;

    private async Task HandleValidSubmit()
    {
        var user = DbContext.Registrations.FirstOrDefault(u => u.Email == forgotModel.Email);
        if (user == null)
        {
            errorMessage = "No user found with this email.";
            successMessage = null;
            return;
        }
        if (forgotModel.NewPassword != forgotModel.ConfirmPassword)
        {
            errorMessage = "Passwords do not match.";
            successMessage = null;
            return;
        }
        user.PasswordHash = BCrypt.Net.BCrypt.HashPassword(forgotModel.NewPassword);
        await DbContext.SaveChangesAsync();
        errorMessage = null;
        successMessage = "Password reset successfully! You can now log in.";
    }

    public class ForgotModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }
        [Required]
        [MinLength(6)]
        public string NewPassword { get; set; }
        [Required]
        [Compare("NewPassword", ErrorMessage = "Passwords do not match.")]
        public string ConfirmPassword { get; set; }
    }
}
